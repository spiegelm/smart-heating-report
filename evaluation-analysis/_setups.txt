########################
1. Setup: August-September 2015
########################


- Der Heating Schedule einen Eintrag mit 2°, das erlaubt das Thermostat aber gar nicht. 235 PUT Requests sind mit diesem Wert fehlgeschlagen, 2 Mal hat es anscheinend aber auch funktioniert. Ich habe den ungültigen Wert jetzt gelöscht.

Fehler beispiel:

2015-08-03 01:16:36,165 [INFO] root: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "2.0"
2015-08-03 01:16:36,226 [INFO] coap: Response not recognized - sending RST.
2015-08-03 01:18:09,272 [INFO] asyncio: poll 92.950 took 93.043 seconds
2015-08-03 01:18:09,274 [INFO] coap.requester: Request timed out
2015-08-03 01:18:09,276 [ERROR] root: Request timed out: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "2.0"

erfolg beispiel:
2015-08-03 15:15:02,922 [INFO] root: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "2.0"
2015-08-03 15:15:02,981 [ERROR] root: Could not upload. No connection to the server.
2015-08-03 15:15:03,015 [ERROR] root: Could not upload. No connection to the server.
2015-08-03 15:15:05,116 [INFO] asyncio: poll 2.108 took 2.111 seconds
2015-08-03 15:15:05,118 [INFO] coap: Retransmission, Message ID: 21646.
2015-08-03 15:15:05,185 [INFO] coap: Response not recognized - sending RST.
2015-08-03 15:15:17,216 [INFO] asyncio: poll 90.745 took 12.029 seconds
2015-08-03 15:15:17,222 [INFO] root: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "2.0": 2.04 Changed, ''


- 3400 mal kam die Meldung "Response not recognized - sending RST.", fast immer für GET/PUT /set/target. Danach kommt immer ein Timeout.

- Es gab insgesamt 4353 Timeouts, fast alle für PUT /set/mode und GET/PUT /set/target. GET /set/mode funktionierte immer.

- Der mode "manual target" ist scheinbar nicht richtig, der gelesene Mode nach dem setzen der Zieltemp. ist fast immer "radio target". Ich habe das angepasst.


########################
2. Setup: 'radio mode'
########################

- Keine PUT /set/mode mehr nötig


########################
3. Setup: sleeps and retry PUT timeouts
########################

'radio mode'
3s pause zwischen den requests
wiederhole timed out PUT /set/target requests bis sie funktionieren

- wiederholte PUTs schlagen in der regel auch fehl


########################
4. Setup: sleeps and retry PUT timeouts
########################

'radio mode'
3s pause zwischen den requests
wiederhole timed out GET /set/target max 3 mal


########################
5. Setup: fix invalid temps
########################

'radio mode'
3s pause zwischen den requests
wiederhole timed out GET /set/target max 3 mal
fixed schedule

- Die Ergebnisse sind deutlich besser. Ein unique Request (ohne Retries) GET /set/target hat sich von 40% auf 95% verbessert. Ein Retry ist im Schnitt nur bei jedem 3. Request nötig.

- Der PUT request ist nicht wirklich besser geworden. Es sind aber viel weniger nötig, weil der GET jetzt besser funktioniert. Wenn der richtige Wert schon steht, brauchts keinen PUT mehr.

- Ein fehlgeschlagener PUT /set/target ist aber nicht mehr so tragisch, weil der Wert dann beim nächsten Durchlauf (15 min) gesetzt wird. Retries könnten das evtl auch verbessern.


Nachricht von Matthias Kovatsch:

"Die Knoten (d.h. die angesteckten Funkmodule) sind für den Job verhältnismässig leistungsstark. Das grösste Problem liegt in der Kommunikation zwischen Knoten und Thermostat, welche über UART läuft. Die Sachen, die gut funktionieren sind auf dem Knoten gecachet (das Target eigentlich auch, aber maximal nur 5 Sekunden). Für den Rest muss mit der Firmware auf dem Thermostat kommuniziert werden. Hier habe ich selber schon beobachtet, dass oft keine Antwort vom Thermostat zurückkommt.
 
Die Ursache dafür liegt bei Thermostat – die Knoten habe ich viel über UART debugt und nie Probleme gehabt. Es kann jetzt sein, dass die Firmware einfach schlecht implementiert ist oder dass der Microcontroller zu schwach ist, den UART zu bedienen (dieThermostate unterstützen so schon nur eine Baudrate von 2400 Sym/s; der Knoten läuft smooth bei 56k). Die Firmware stammt auch vom OpenHR20-Projekt, welches die UART-Kommunikation hinzugefügt hat (sprich nicht von Honeywell)."

Log Auszug zeigt, dass das keine Antwort auf set/target kommt, der Wert aber (irgendwann) übernommen wurde:

2015-09-28 04:30:12,161 [INFO] root: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "15.0"
2015-09-28 04:31:45,271 [ERROR] root: Request timed out: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "15.0"
[...]
2015-09-28 04:45:08,737 [INFO] root: GET coap://[fdfd::221:2eff:ff00:228b]/set/target: 2.05 Content, '15.00'


2015-09-28 23:04:59,995 [INFO] root: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "20.0"
2015-09-28 23:06:33,052 [ERROR] root: Request timed out: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "20.0"
[...] # Alle GETs/PUTS auf /set/target fehlgeschlagen

2015-09-28 23:49:59,741 [INFO] root: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "20.0"
2015-09-28 23:51:32,802 [ERROR] root: Request timed out: PUT coap://[fdfd::221:2eff:ff00:228b]/set/target "20.0"
2015-09-29 00:00:08,832 [INFO] root: GET coap://[fdfd::221:2eff:ff00:228b]/set/target
2015-09-29 00:01:41,938 [ERROR] root: Request timed out: GET coap://[fdfd::221:2eff:ff00:228b]/set/target
2015-09-29 00:01:45,188 [INFO] root: GET coap://[fdfd::221:2eff:ff00:228b]/set/target: 2.05 Content, '20.00'

